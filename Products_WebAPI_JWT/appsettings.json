{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "ConnectionStrings": {
    "ProductJWTConnection": "Server=localhost;Database=ProductJWT; User Id=postgres; Password=postgres;"
  },
  "JWT": {
    "Key": "HelloHelloHelloHelloHelloHelloHelloHelloHelloHello",
    "Issuer": "https://localhost:7120/",
    "Audience": "https://localhost:7120/"
  },
  "AllowedHosts": "*",

  "Serilog": {
    "Using": [ "Serilog.Sinks.PostgreSQL.Configuration", "Serilog.Sinks.Telegram.Alternative" ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning"
      }
    },
    "Enrich": [ "WithMachineName" ],
    "WriteTo": [
      {
        "Name": "PostgreSQL",
        "Args": {
          "connectionString": "ProductJWTConnection",
          "tableName": "LogEntry",
          "needAutoCreateTable": true
        }

      },
      {
        "Name": "Telegram",
        "Args": {
          "botToken": "5997104590:AAFkHASbEKVVIkE_aQlTkpWc5BnXTVFI4kI",
          "chatId": "5477859272"
        }
      },
      {
        "Name": "Console",
        "Args": {
          "MinimumLevel": {
            "Default": "Information",
            "Override": {
              "Microsoft": "Warning",
              "System": "Warning"
            }
          }
        }
      },
      {
        "Name": "File",
        "Args": {
          "path": "Logs/log.txt",
          "outputTemplate": "{Timestamp:o} [{Level:u3}] ({Application}/{MachineName}/{ThreadId}) {Message}{NewLine}{Exception}"
        }
      }
    ]
  },
  "Columns": {
    "message": "RenderedMessageColumnWriter",
    "message_template": "MessageTemplateColumnWriter",
    "level": {
      "Name": "LevelColumnWriter",
      "Args": {
        "renderAsText": true,
        "dbType": "Varchar"
      }
    },
    "raise_date": "TimestampColumnWriter",
    "exception": "ExceptionColumnWriter",
    "properties": "LogEventSerializedColumnWriter",
    "props_test": {
      "Name": "PropertiesColumnWriter",
      "Args": { "dbType": "Json" }
    },
    "machine_name": {
      "Name": "SinglePropertyColumnWriter",
      "Args": {
        "propertyName": "MachineName",
        "writeMethod": "Raw"
      }
    }
  }
}